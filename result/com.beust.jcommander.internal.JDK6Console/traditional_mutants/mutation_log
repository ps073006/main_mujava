COI_1:42:char_readPassword(boolean): echoInput  =>  !echoInput
SDL_1:24:JDK6Console(java.lang.Object): this.console = console; java.lang.reflect.Method writerMethod = console.getClass().getDeclaredMethod( \"writer\", new java.lang.Class<?>[0] ); writer = (java.io.PrintWriter) writerMethod.invoke( console, new java.lang.Object[0] );  =>   java.lang.reflect.Method writerMethod = console.getClass().getDeclaredMethod( \"writer\", new java.lang.Class<?>[0] ); writer = (java.io.PrintWriter) writerMethod.invoke( console, new java.lang.Object[0] );
SDL_2:24:JDK6Console(java.lang.Object): this.console = console; java.lang.reflect.Method writerMethod = console.getClass().getDeclaredMethod( \"writer\", new java.lang.Class<?>[0] ); writer = (java.io.PrintWriter) writerMethod.invoke( console, new java.lang.Object[0] );  =>   this.console = console; java.lang.reflect.Method writerMethod = console.getClass().getDeclaredMethod( \"writer\", new java.lang.Class<?>[0] );
SDL_3:29:void_print(java.lang.String): writer.print( msg );  =>  
SDL_4:34:void_println(java.lang.String): writer.println( msg );  =>  
SDL_5:49:char_readPassword(boolean): try {     writer.flush();     java.lang.reflect.Method method;     if (echoInput) {         method = console.getClass().getDeclaredMethod( \"readLine\", new java.lang.Class<?>[0] );         return ((java.lang.String) method.invoke( console, new java.lang.Object[0] )).toCharArray();     } else {         method = console.getClass().getDeclaredMethod( \"readPassword\", new java.lang.Class<?>[0] );         return (char[]) method.invoke( console, new java.lang.Object[0] );     } } catch ( java.lang.Exception e ) {     throw new com.beust.jcommander.ParameterException( e ); }  =>   try {     java.lang.reflect.Method method;     if (echoInput) {         method = console.getClass().getDeclaredMethod( \"readLine\", new java.lang.Class<?>[0] );         return ((java.lang.String) method.invoke( console, new java.lang.Object[0] )).toCharArray();     } else {         method = console.getClass().getDeclaredMethod( \"readPassword\", new java.lang.Class<?>[0] );         return (char[]) method.invoke( console, new java.lang.Object[0] );     } }
SDL_6:43:char_readPassword(boolean): try {     writer.flush();     java.lang.reflect.Method method;     if (echoInput) {         method = console.getClass().getDeclaredMethod( \"readLine\", new java.lang.Class<?>[0] );         return ((java.lang.String) method.invoke( console, new java.lang.Object[0] )).toCharArray();     } else {         method = console.getClass().getDeclaredMethod( \"readPassword\", new java.lang.Class<?>[0] );         return (char[]) method.invoke( console, new java.lang.Object[0] );     } } catch ( java.lang.Exception e ) {     throw new com.beust.jcommander.ParameterException( e ); }  =>   try {     writer.flush();     java.lang.reflect.Method method; }
SDL_7:44:char_readPassword(boolean): method = console.getClass().getDeclaredMethod( \"readLine\", new java.lang.Class<?>[0] ); return ((java.lang.String) method.invoke( console, new java.lang.Object[0] )).toCharArray();  =>   return ((java.lang.String) method.invoke( console, new java.lang.Object[0] )).toCharArray();
SDL_8:49:char_readPassword(boolean): if (echoInput) {     method = console.getClass().getDeclaredMethod( \"readLine\", new java.lang.Class<?>[0] );     return ((java.lang.String) method.invoke( console, new java.lang.Object[0] )).toCharArray(); } else {     method = console.getClass().getDeclaredMethod( \"readPassword\", new java.lang.Class<?>[0] );     return (char[]) method.invoke( console, new java.lang.Object[0] ); }  =>   if (true) {     method = console.getClass().getDeclaredMethod( \"readLine\", new java.lang.Class<?>[0] );     return ((java.lang.String) method.invoke( console, new java.lang.Object[0] )).toCharArray(); } else {     method = console.getClass().getDeclaredMethod( \"readPassword\", new java.lang.Class<?>[0] );     return (char[]) method.invoke( console, new java.lang.Object[0] ); }
SDL_9:47:char_readPassword(boolean): method = console.getClass().getDeclaredMethod( \"readPassword\", new java.lang.Class<?>[0] ); return (char[]) method.invoke( console, new java.lang.Object[0] );  =>   return (char[]) method.invoke( console, new java.lang.Object[0] );
SDL_10:45:char_readPassword(boolean): return ((java.lang.String) method.invoke( console, new java.lang.Object[0] )).toCharArray();  =>   return 0;
SDL_11:48:char_readPassword(boolean): return (char[]) method.invoke( console, new java.lang.Object[0] );  =>   return 0;
