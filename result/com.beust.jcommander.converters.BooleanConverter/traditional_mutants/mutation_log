COR_1:20:java.lang.Boolean_convert(java.lang.String): \"false\".equalsIgnoreCase( value ) || \"true\".equalsIgnoreCase( value )  =>   \"false\".equalsIgnoreCase( value ) && \"true\".equalsIgnoreCase( value )
COR_2:20:java.lang.Boolean_convert(java.lang.String): \"false\".equalsIgnoreCase( value ) || \"true\".equalsIgnoreCase( value )  =>   \"false\".equalsIgnoreCase( value ) ^ \"true\".equalsIgnoreCase( value )
COI_1:20:java.lang.Boolean_convert(java.lang.String): \"false\".equalsIgnoreCase( value ) || \"true\".equalsIgnoreCase( value )  =>  !("false".equalsIgnoreCase( value ) || "true".equalsIgnoreCase( value ))
SDL_1:20:java.lang.Boolean_convert(java.lang.String): if (\"false\".equalsIgnoreCase( value ) || \"true\".equalsIgnoreCase( value )) {     return Boolean.parseBoolean( value ); } else {     throw new com.beust.jcommander.ParameterException( getErrorString( value, \"a boolean\" ) ); }  =>  
SDL_2:25:java.lang.Boolean_convert(java.lang.String): if (\"false\".equalsIgnoreCase( value ) || \"true\".equalsIgnoreCase( value )) {     return Boolean.parseBoolean( value ); } else {     throw new com.beust.jcommander.ParameterException( getErrorString( value, \"a boolean\" ) ); }  =>   if (true) {     return Boolean.parseBoolean( value ); } else {     throw new com.beust.jcommander.ParameterException( getErrorString( value, \"a boolean\" ) ); }
SDL_3:23:java.lang.Boolean_convert(java.lang.String): throw new com.beust.jcommander.ParameterException( getErrorString( value, \"a boolean\" ) );  =>  
ODL_1:20:java.lang.Boolean_convert(java.lang.String):"false".equalsIgnoreCase( value ) || "true".equalsIgnoreCase( value ) => "false".equalsIgnoreCase( value )
ODL_2:20:java.lang.Boolean_convert(java.lang.String):"false".equalsIgnoreCase( value ) || "true".equalsIgnoreCase( value ) => "true".equalsIgnoreCase( value )
